name: "Deploy Production"

on:
  push:
    branches:
      - "master"
    tags:
      - v*
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: e.g. v22

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      for_deploy: true

    concurrency:
      group: build-prod
      cancel-in-progress: true

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: build

    concurrency:
      group: deploy-prod
      cancel-in-progress: true

    steps:
      - name: "Download Docker Image Artifact"
        uses: actions/download-artifact@v4
        with:
          name: docker-image-amd64
          path: /tmp

      - name: "Get Tag Name"
        id: get_tag_name
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.tag }}" != "" ]]; then
            echo "TAG_NAME=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "TAG_NAME=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT
          fi

      - name: "Load Docker Image"
        run: |
          docker load --input /tmp/docker-image-amd64.tar
          docker tag amp-dockerized:latest mauvehed/amp-dockerized:${{ steps.get_tag_name.outputs.TAG_NAME }}
          docker image ls -a

      - name: "Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Push Docker Image to Docker Hub"
        run: docker push mauvehed/amp-dockerized:${{ steps.get_tag_name.outputs.TAG_NAME }}

      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GITHUB_ACTOR }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Tag and Push to GitHub Container Registry"
        run: |
          docker tag mauvehed/amp-dockerized:${{ steps.get_tag_name.outputs.TAG_NAME }} ghcr.io/${{ github.repository_owner }}/amp-dockerized:${{ steps.get_tag_name.outputs.TAG_NAME }}
          docker push ghcr.io/${{ github.repository_owner }}/amp-dockerized:${{ steps.get_tag_name.outputs.TAG_NAME }}


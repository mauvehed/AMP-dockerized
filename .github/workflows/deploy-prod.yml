name: "Deploy Production"

on:
  push:
    branches:
      - "master"
    tags:
      - v*
  workflow_dispatch:
    inputs:
      tag:
        required: true
        description: e.g. v22

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      for_deploy: true

    concurrency:
      group: build-prod
      cancel-in-progress: true

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: build

    concurrency:
      group: deploy-prod
      cancel-in-progress: true

    steps:
      - name: "Download Docker Image Artifacts"
        uses: actions/download-artifact@v4
        with:
          path: /tmp

      - name: "Get Tag Name"
        id: get_tag_name
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.tag }}" != "" ]]; then
            echo "TAG_NAME=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "TAG_NAME=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT
          fi

      - name: "Load Docker Images"
        id: load_images
        run: |
          TAGS=""
          for f in $(find /tmp -type f -iname 'docker-image-*.tar' -print); do
            ARCH=$(echo ${f} | sed -E 's/.*docker-image-(.*).tar/\1/')
            docker load --input ${f}
            TAG="mauvehed/amp-dockerized:${{ steps.get_tag_name.outputs.TAG_NAME }}-${ARCH}"
            TAGS="${TAGS} ${TAG}"
            docker tag amp-dockerized:latest ${TAG}
          done
          echo "TAGS=${TAGS}" >> $GITHUB_OUTPUT
          docker image ls -a

      - name: "Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Deploy to Docker Hub"
        run: docker image push --all-tags mauvehed/amp-dockerized

      - name: "Deploy Multi-Arch Manifests to Docker Hub"
        run: |
          MANIFESTS="mauvehed/amp-dockerized:latest mauvehed/amp-dockerized:${{ steps.get_tag_name.outputs.TAG_NAME }}"
          for m in ${MANIFESTS}; do
            docker manifest create ${m} ${{ steps.load_images.outputs.TAGS }}
            docker manifest push ${m}
          done

      # --- GitHub Container Registry (GHCR) steps ---
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GITHUB_ACTOR }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Tag Images for GitHub Container Registry"
        run: |
          for tag in ${{ steps.load_images.outputs.TAGS }}; do
            # Re-tag Docker images for GHCR
            GHCR_TAG="ghcr.io/${{ github.repository_owner }}/amp-dockerized:${{ steps.get_tag_name.outputs.TAG_NAME }}-${{ tag##*: }}"
            docker tag "${tag}" "${GHCR_TAG}"
          done

      - name: "Deploy to GitHub Container Registry"
        run: |
          for tag in ${{ steps.load_images.outputs.TAGS }}; do
            GHCR_TAG="ghcr.io/${{ github.repository_owner }}/amp-dockerized:${{ steps.get_tag_name.outputs.TAG_NAME }}-${{ tag##*: }}"
            docker push "${GHCR_TAG}"
          done

      - name: "Deploy Multi-Arch Manifests to GHCR"
        run: |
          MANIFESTS="ghcr.io/${{ github.repository_owner }}/amp-dockerized:latest ghcr.io/${{ github.repository_owner }}/amp-dockerized:${{ steps.get_tag_name.outputs.TAG_NAME }}"
          for m in ${MANIFESTS}; do
            docker manifest create ${m} ${{ steps.load_images.outputs.TAGS }}
            docker manifest push ${m}
          done

